device:  cuda
==================================================
Algorithm: FedAvg
Local batch size: 64
Local epochs: 5
Local learing rate: 0.005
Local learing rate decay: False
Total number of clients: 10
Clients join in each round: 1.0
Clients randomly join: False
Client drop rate: 0.0
Client select regarding time: False
Running times: 1
Dataset: Cifar10
Number of classes: 10
Backbone: cnn
Using device: cuda
Using DP: False
Auto break: False
Global rounds: 100
DLG attack: False
Total number of new clients: 0
Fine tuning epoches on new clients: 0
==================================================
True

Dataset already generated.


============= Running time: 0th =============
Creating server and clients ...
FedAvgCNN(
  (conv1): Sequential(
    (0): Conv2d(3, 32, kernel_size=(5, 5), stride=(1, 1))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  )
  (conv2): Sequential(
    (0): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Sequential(
    (0): Linear(in_features=1600, out_features=512, bias=True)
    (1): ReLU(inplace=True)
  )
  (fc): Linear(in_features=512, out_features=10, bias=True)
)

Join ratio / total clients: 1.0 / 10
Finished creating server and clients.

-------------Round number: 0-------------

Evaluate global model
Averaged Train Loss: 2.3039
Averaged Test Accurancy: 0.0938
Averaged Test AUC: 0.4925
Std Test Accurancy: 0.1254
Std Test AUC: 0.2191
------------------------- time cost ------------------------- 10.280725002288818

-------------Round number: 1-------------

Evaluate global model
Averaged Train Loss: 2.3265
Averaged Test Accurancy: 0.1272
Averaged Test AUC: 0.5428
Std Test Accurancy: 0.1360
Std Test AUC: 0.2346
------------------------- time cost ------------------------- 9.183778524398804

-------------Round number: 2-------------

Evaluate global model
Traceback (most recent call last):
  File "/opt/tiger/PFLlib/system/main.py", line 473, in <module>
    run(args, dataset_path)
  File "/opt/tiger/PFLlib/system/main.py", line 270, in run
    server.train()
  File "/opt/tiger/PFLlib/system/flcore/servers/serveravg.py", line 48, in train
    self.evaluate()
  File "/opt/tiger/PFLlib/system/flcore/servers/serverbase.py", line 245, in evaluate
    stats_train = self.train_metrics()
  File "/opt/tiger/PFLlib/system/flcore/servers/serverbase.py", line 234, in train_metrics
    cl, ns = c.train_metrics()
  File "/opt/tiger/PFLlib/system/flcore/clients/clientbase.py", line 160, in train_metrics
    for x, y in trainloader:
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/accelerate/data_loader.py", line 461, in __iter__
    next_batch = next(dataloader_iter)
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 265, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 142, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 142, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 119, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
  File "/home/tiger/miniconda3/envs/fl/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 162, in collate_tensor_fn
    return torch.stack(batch, 0, out=out)
KeyboardInterrupt
